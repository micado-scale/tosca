tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - https://raw.githubusercontent.com/micado-scale/tosca/v0.x.2/micado_types.yaml

topology_template:
  node_templates:
    nfs-server-pod:
      type: tosca.nodes.MiCADO.Container.Application.Docker
      properties:
        image: micado-app-repo/nfs-server
        clusterIP: 10.96.0.240
        ports: ## ports to be open on the container
          - target: 2049
          - target: 111
            protocol: udp
      interfaces:
        Kubernetes:
          create:
            implementation: Deployment
            inputs: 
              name: nfs-server-container
              metadata:
                labels:
                  app: wordpress
                  tier: nfs
              securityContext:
                privileged: True
              args: ['/exports']
              strategy:
                type: Recreate

    wordpress-mysql:
      type: tosca.nodes.MiCADO.Container.Application.Docker
      properties:
        image: mysql
        clusterIP: None
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: admin
        - name: MYSQL_DATABASE
          value: wordpress
      requirements:
        - volume:
            node: nfs-volume
            relationship:
              type: tosca.relationships.AttachesTo
              properties:
                location: /var/lib/mysql
      interfaces:
        Kubernetes:
          create:
            implementation: Deployment
            inputs: ###Different parameter that will be passed to the Komposed file here is few examples
              name: mysql
              metadata:
                labels:
                  app: wordpress
                  tier: mysql
              ports:
              - containerPort: 3306
                name: mysql
              strategy:
                type: Recreate

    nfs-volume: ## this is the description of a volume to be mounted on a node
      type: tosca.nodes.MiCADO.Container.Volume
      properties:
        name: nfs-volume
      interfaces:
        Kubernetes:
          create:
            inputs:
              nfs:
                server: 10.96.0.240
                path: /

    wordpress:
      type: tosca.nodes.MiCADO.Container.Application.Docker
      properties:
        image: mysql
        env:
        - name: MYSQL_DB_HOST
          value: wordpress-mysql
        - name: MYSQL_DB_PASSWORD
          value: admin
        ports: ## ports to be open on the container
          - target: 80
            nodePort: 30010
            type: NodePort
          - containerPort: 80
            name: wordpress
      requirements:
        - volume:
            node: nfs-volume
            relationship:
              type: tosca.relationships.AttachesTo
              properties:
                location: /var/www/html
      interfaces:
        Kubernetes:
          create:
            implementation: Deployment
            inputs: ###Different parameter that will be passed to the Komposed file here is few examples
              name: wordpress
              metadata:
                labels:
                  app: wordpress
                  tier: frontend
              strategy:
                type: Recreate
              resources:
                requests:
                  cpu: "450m"


  outputs:
    ports:
      value: { get_attribute: [ wordpress, port ]}


