tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - https://raw.githubusercontent.com/micado-scale/tosca/v0.x.2/micado_types.yaml

topology_template:
  node_templates:
    YOUR_APPLICATION_NODE:
      ##############################################################################################
      ### Description of your application node you can find example in the application directory ###
      ##############################################################################################

    policies:
      - scalability:
        type: tosca.policies.Scaling.MiCADO
        targets: [ YOUR_APPLICATION_NODE ]
        properties:
          min_instances: 1
          max_instances: '{{MAXCONTAINERS}}'
          scaling_rule: |
            print "Length of queue:",ITEMS
            required_count = 0
            if ITEMS>0:
              required_count = ceil(AET/(REMAININGTIME/ITEMS)) if REMAININGTIME>0 else MAXCONTAINERS
              m_container_count = min(required_count, len(m_nodes) * 5)
            else:
              m_container_count = 0
            print "Number of required containers:",required_count
            print "Number of requested containers:",m_container_count    

